[1/5] cd /home/mung/Documents/datn/http_request/build/esp-idf/esptool_py && /home/mung/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/mung/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/mung/Documents/datn/http_request/build/partition_table/partition-table.bin /home/mung/Documents/datn/http_request/build/http_request.bin
http_request.bin binary size 0xc6920 bytes. Smallest app partition is 0x100000 bytes. 0x396e0 bytes (22%) free.
[2/5] Performing build step for 'bootloader'
[1/1] cd /home/mung/Documents/datn/http_request/build/bootloader/esp-idf/esptool_py && /home/mung/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/mung/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/mung/Documents/datn/http_request/build/bootloader/bootloader.bin
Bootloader binary size 0x6860 bytes. 0x7a0 bytes (7%) free.
[2/3] cd /home/mung/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/mung/esp/esp-idf -D "SERIAL_TOOL=/home/mung/.espressif/python_env/idf5.2_py3.10_env/bin/python;;/home/mung/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/mung/Documents/datn/http_request/build -P /home/mung/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 http_request.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.0
Serial port /dev/ttyUSB0
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: cc:db:a7:49:f1:e4
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000d6fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26720 bytes to 16344...
Writing at 0x00001000... (100 %)
Wrote 26720 bytes (16344 compressed) at 0x00001000 in 0.9 seconds (effective 243.1 kbit/s)...
Hash of data verified.
Compressed 813344 bytes to 518113...
Writing at 0x00010000... (3 %)
Writing at 0x0001cae6... (6 %)
Writing at 0x00023c11... (9 %)
Writing at 0x00028c22... (12 %)
Writing at 0x00031ceb... (15 %)
Writing at 0x0003739b... (18 %)
Writing at 0x0003d29e... (21 %)
Writing at 0x00042bbd... (25 %)
Writing at 0x00048763... (28 %)
Writing at 0x0004e41b... (31 %)
Writing at 0x00053d72... (34 %)
Writing at 0x00059b84... (37 %)
Writing at 0x0005f5e0... (40 %)
Writing at 0x00065a31... (43 %)
Writing at 0x0006abcc... (46 %)
Writing at 0x00070179... (50 %)
Writing at 0x00075457... (53 %)
Writing at 0x0007a97a... (56 %)
Writing at 0x0008015d... (59 %)
Writing at 0x000858b4... (62 %)
Writing at 0x0008b535... (65 %)
Writing at 0x00090e2e... (68 %)
Writing at 0x00096c14... (71 %)
Writing at 0x0009c517... (75 %)
Writing at 0x000a1b87... (78 %)
Writing at 0x000a85ba... (81 %)
Writing at 0x000b3bcd... (84 %)
Writing at 0x000b99e6... (87 %)
Writing at 0x000c1d21... (90 %)
Writing at 0x000c76fe... (93 %)
Writing at 0x000cdaff... (96 %)
Writing at 0x000d312e... (100 %)
Wrote 813344 bytes (518113 compressed) at 0x00010000 in 11.8 seconds (effective 552.8 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 347.5 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
