[1/5] cd /home/mung/Documents/datn/http_request/build/esp-idf/esptool_py && /home/mung/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/mung/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/mung/Documents/datn/http_request/build/partition_table/partition-table.bin /home/mung/Documents/datn/http_request/build/http_request.bin
http_request.bin binary size 0xc6910 bytes. Smallest app partition is 0x100000 bytes. 0x396f0 bytes (22%) free.
[2/5] Performing build step for 'bootloader'
[1/1] cd /home/mung/Documents/datn/http_request/build/bootloader/esp-idf/esptool_py && /home/mung/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/mung/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/mung/Documents/datn/http_request/build/bootloader/bootloader.bin
Bootloader binary size 0x6860 bytes. 0x7a0 bytes (7%) free.
[2/3] cd /home/mung/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/mung/esp/esp-idf -D "SERIAL_TOOL=/home/mung/.espressif/python_env/idf5.2_py3.10_env/bin/python;;/home/mung/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/mung/Documents/datn/http_request/build -P /home/mung/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 http_request.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.0
Serial port /dev/ttyUSB0
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: cc:db:a7:49:f1:e4
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000d6fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26720 bytes to 16344...
Writing at 0x00001000... (100 %)
Wrote 26720 bytes (16344 compressed) at 0x00001000 in 0.9 seconds (effective 243.9 kbit/s)...
Hash of data verified.
Compressed 813328 bytes to 518092...
Writing at 0x00010000... (3 %)
Writing at 0x0001cae1... (6 %)
Writing at 0x00023c0e... (9 %)
Writing at 0x00028c2f... (12 %)
Writing at 0x00031ce0... (15 %)
Writing at 0x00037397... (18 %)
Writing at 0x0003d29b... (21 %)
Writing at 0x00042bc5... (25 %)
Writing at 0x0004877a... (28 %)
Writing at 0x0004e428... (31 %)
Writing at 0x00053d7b... (34 %)
Writing at 0x00059ba6... (37 %)
Writing at 0x0005f5e5... (40 %)
Writing at 0x00065a44... (43 %)
Writing at 0x0006abdb... (46 %)
Writing at 0x0007018a... (50 %)
Writing at 0x00075470... (53 %)
Writing at 0x0007a9b0... (56 %)
Writing at 0x0008016f... (59 %)
Writing at 0x000858db... (62 %)
Writing at 0x0008b547... (65 %)
Writing at 0x00090e50... (68 %)
Writing at 0x00096c1d... (71 %)
Writing at 0x0009c52d... (75 %)
Writing at 0x000a1b9f... (78 %)
Writing at 0x000a85dd... (81 %)
Writing at 0x000b3bea... (84 %)
Writing at 0x000b9a02... (87 %)
Writing at 0x000c1d25... (90 %)
Writing at 0x000c7700... (93 %)
Writing at 0x000cdb03... (96 %)
Writing at 0x000d3131... (100 %)
Wrote 813328 bytes (518092 compressed) at 0x00010000 in 11.8 seconds (effective 552.5 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 336.6 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
