[1/9] Performing build step for 'bootloader'
[1/1] cd /home/mung/Documents/datn/http_request/build/bootloader/esp-idf/esptool_py && /home/mung/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/mung/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/mung/Documents/datn/http_request/build/bootloader/bootloader.bin
Bootloader binary size 0x6860 bytes. 0x7a0 bytes (7%) free.
[2/7] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/__/lib/adc.c.obj
In file included from /home/mung/Documents/datn/http_request/lib/adc.h:6,
                 from /home/mung/Documents/datn/http_request/lib/adc.c:1:
/home/mung/esp/esp-idf/components/driver/deprecated/driver/adc.h:19:2: warning: #warning "legacy adc driver is deprecated, please migrate to use esp_adc/adc_oneshot.h and esp_adc/adc_continuous.h for oneshot mode and continuous mode drivers respectively" [-Wcpp]
   19 | #warning "legacy adc driver is deprecated, please migrate to use esp_adc/adc_oneshot.h and esp_adc/adc_continuous.h for oneshot mode and continuous mode drivers respectively"
      |  ^~~~~~~
[3/7] Linking C static library esp-idf/main/libmain.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable http_request.elf
[6/7] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/mung/Documents/datn/http_request/build/http_request.bin
[7/7] cd /home/mung/Documents/datn/http_request/build/esp-idf/esptool_py && /home/mung/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/mung/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/mung/Documents/datn/http_request/build/partition_table/partition-table.bin /home/mung/Documents/datn/http_request/build/http_request.bin
http_request.bin binary size 0xc6910 bytes. Smallest app partition is 0x100000 bytes. 0x396f0 bytes (22%) free.
